version: 2.1

executors:
  php-72:
    docker:
    - image: thecodingmachine/php:7.2-v2-apache
    environment:
      PHP_EXTENSIONS: gd intl pdo_mysql xsl zip soap bcmath opcache
      PHP_INI_MEMORY_LIMIT: -1
  php-71:
    docker:
    - image: thecodingmachine/php:7.1-v2-apache
    environment:
      PHP_EXTENSIONS: gd intl pdo_mysql xsl zip soap bcmath opcache
      PHP_INI_MEMORY_LIMIT: -1

jobs:
  build:
    parameters:
      executor:
        type: executor
      magento_version:
        type: string
      magento_edition:
        type: string
        default: community
    executor: << parameters.executor >>
    steps:
    - checkout:
        path: repo
    - restore_cache:
        keys:
        - v1-dependencies-<< parameters.magento_edition >>-<< parameters.magento_version >>-{{ checksum "repo/composer.json" }}
    - run:
        name: Install Magento
        command: |
          composer create-project --repository=https://repo.magento.com/ magento/project-<< parameters.magento_edition >>-edition:<< parameters.magento_version >> magento
    - run:
        name: Install App Search module
        command: |
          cd magento
          composer config repositories.app-search '{"type": "path", "url": "../repo"}'
          composer config "minimum-stability" dev
          composer require swiftype/swiftype-app-search-magento
    - run:
        name: Enable Magento modules
        command: cd magento && bin/magento module:enable --all
    - save_cache:
        paths:
        - ~/.composer/cache/
        key: v1-dependencies-<< parameters.magento_edition >>-<< parameters.magento_version >>-{{ checksum "repo/composer.json" }}
    - persist_to_workspace:
        root: .
        paths:
        - .

  test-compile:
    parameters:
      executor:
        type: executor
    executor: << parameters.executor >>
    working_directory: ~/project/magento
    steps:
    - attach_workspace:
        at: .
    - attach_workspace:
        at: ~/project
    - run:
        name: Compile Magento DI
        command: bin/magento setup:di:compile

  test-unit:
    parameters:
      executor:
        type: executor
    executor: << parameters.executor >>
    working_directory: ~/project/magento
    steps:
    - attach_workspace:
        at: ~/project
    - run: ls
    - run: bin/magento

workflows:
  php-7.2-mage-2.3:
    jobs:
    - build:
        name: build-php-7.2-mage-2.3
        executor: php-72
        magento_version: ^2.3
    - test-compile:
        name: compile-php-7.2-mage-2.3
        executor: php-72
        requires:
        - build-php-7.2-mage-2.3
    - test-unit:
        name: unit-test-php-7.2-mage-2.3
        executor: php-72
        requires:
        - build-php-7.2-mage-2.3
  php-7.1-mage-2.3:
    jobs:
    - build:
        name: build-php-7.1-mage-2.3
        executor: php-71
        magento_version: ^2.3
    - test-compile:
        name: compile-php-7.1-mage-2.3
        executor: php-71
        requires:
        - build-php-7.1-mage-2.3
    - test-unit:
        name: unit-test-php-7.1-mage-2.3
        executor: php-71
        requires:
        - build-php-7.1-mage-2.3
  php-7.2-mage-2.2:
    jobs:
    - build:
        name: build-php-7.2-mage-2.2
        executor: php-72
        magento_version: ^2.2
    - test-compile:
        name: compile-php-7.1-mage-2.2
        executor: php-72
        requires:
        - build-php-7.2-mage-2.2
    - test-unit:
        name: unit-test-php-7.2-mage-2.2
        executor: php-72
        requires:
        - build-php-7.2-mage-2.2
  php-7.1-mage-2.2:
    jobs:
    - build:
        name: build-php-7.1-mage-2.2
        executor: php-71
        magento_version: ^2.2
    - test-compile:
        name: compile-php-7.1-mage-2.2
        executor: php-71
        requires:
        - build-php-7.1-mage-2.2
    - test-unit:
        name: unit-test-php-7.1-mage-2.2
        executor: php-71
        requires:
        - build-php-7.1-mage-2.2
